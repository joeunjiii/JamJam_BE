server:
  port: 8081

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, email, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: profile_nickname, profile_image
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

app:
  jwt:
    secret: "replace-with-32+byte-secret-or-base64"
    access-ttl-ms: 3600000
    refresh-ttl-ms: 1209600000
    exchange-ttl-ms: 120000     # 2분
  post-login:
    mobile-deeplink: ${MOBILE_DEEPLINK:JamJam://oauth/success}   # 또는 https 유니버설 링크(권장)

logging:
  level:
    org.springframework.security: INFO
